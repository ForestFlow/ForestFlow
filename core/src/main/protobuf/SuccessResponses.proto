/**
 * Copyright 2020 DreamWorks Animation L.L.C.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto2";

import "scalapb/scalapb.proto";
import "FQRV.proto";
import "Contract.proto";
import "ServableSettings.proto";
import "Prediction.proto";
import "ServableMetrics.proto";
import "ContractSettings.proto";


//import "google/protobuf/wrappers.proto";

option (scalapb.options) = {
  package_name: "com.dreamworks.forestflow.domain"
  flat_package: true
  import: "akka.http.scaladsl.model.StatusCodes"
  import: "com.dreamworks.forestflow.serving.impl._"
};

message SuccessResponse {
    oneof sealed_value {
        ServableCreatedSuccessfully ServableCreatedSuccessfully = 1;
        ServablesDeletedSuccessfully ServablesDeletedSuccessfully = 2;
        ServableUpdatedSuccessfully ServableUpdatedSuccessfully = 3;
        Prediction Prediction = 4;
        ServableSettings ServableSettings = 5;
        ContractUpdatedSuccessfully ContractUpdatedSuccessfully = 6;
        ServableMetrics ServableMetrics = 7;
        FQRV FQRV = 8;
        ContractSettings ContractSettings = 9;
        ContractCreatedSuccessfully ContractCreatedSuccessfully = 10;
        Contracts Contracts = 11;
    }
}


message ServableCreatedSuccessfully {
    required FQRV fqrv = 1;
}

message ServablesDeletedSuccessfully {
    repeated FQRV fqrv = 1;
}
message ServableUpdatedSuccessfully {
    required FQRV fqrv = 1;
}

message ContractUpdatedSuccessfully {
    required Contract contract = 1;
}

message ContractCreatedSuccessfully {
    required Contract contract = 1;
}

message Contracts {
    repeated Contract contracts = 1 [(scalapb.field).collection_type="_root_.scala.Predef.Set"];
}